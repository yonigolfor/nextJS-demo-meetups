{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Play\\\\Desktop\\\\JSworks\\\\warmUp\\\\reactProjects\\\\next-meetup-project\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nexport default function Homepage({\n  meetups\n}) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\nexport async function getStaticProps() {\n  // can fetch data securely. this code will not appear in client-side.\n  // This code will not appear even in other clients machines!\n  const client = await MongoClient.connect(\"mongodb+srv://YoniGolfor:Yoni2023@cluster0.apmkq.mongodb.net/Meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray(); //gets all meetups\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["C:/Users/Play/Desktop/JSworks/warmUp/reactProjects/next-meetup-project/pages/index.js"],"names":["MongoClient","MeetupList","Homepage","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","props","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC5C,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB,CARqC,CAQoB;;AAEzDN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA,OAAO,EAAEA,OAAO,CAACW,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nexport default function Homepage({ meetups }) {\r\n  return <MeetupList meetups={meetups} />;\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // can fetch data securely. this code will not appear in client-side.\r\n  // This code will not appear even in other clients machines!\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://YoniGolfor:Yoni2023@cluster0.apmkq.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find().toArray(); //gets all meetups\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}